@using EntityLayer.Concrete
@model Student
@{
    if (Model.StudentId == 0)
        ViewData["Title"] = "Add New Student";
    else
        ViewData["Title"] = "Update Student";
}

<form action="/Student/AddUpdateStudent" method="post">
    <div class="form-row">
        <div class="form-group col-md-12">
            <h4>You can use this page to add/update a student</h4>
            <hr width="100%" />
        </div>
    </div>
    @Html.HiddenFor(x=>x.StudentId,Model.StudentId)
    <div class="form-row">
        <div class="col-md-6 mb-3">
            @Html.LabelFor(x=>x.FirstName)
            @Html.TextBoxFor(x=>x.FirstName,Model.FirstName,new {@class="form-control", @required  = "required"})
        </div>
        <div class="col-md-6 mb-3">
            @Html.LabelFor(x=>x.LastName)
            @Html.TextBoxFor(x=>x.LastName,Model.LastName,new {@class="form-control", @required  = "required"})
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-12">
            @Html.LabelFor(x=>x.BirthDate)
            @Html.EditorFor(x => x.BirthDate,new { htmlAttributes = new { @class = "form-control" ,@value=Model.BirthDate.Date.ToString("dd.MM.yyyy"), @required  = "required"} ,maxlength = 10})
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-12">
            @Html.LabelFor(x=>x.CourseId,"Select Course")
            @Html.DropDownListFor(x=>x.CourseId,(List<SelectListItem>)ViewData["StudentSelectList"],new {@class="form-control", @required  = "required"})

        </div>
    </div>
    <button type="submit" class="btn btn-primary submit mb-4">Save</button>
</form>
